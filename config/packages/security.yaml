security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, projet]
        in_memory:
            memory:
                users:
                    philou:
                        password: $2y$12$A836tLLqvqCQkgAm0fzngelbR6YzMYFOcEZXXHUkX89mtPkP7rZNO
                        roles: 'ROLE_SUPER_ADMIN'
        projet:
            entity: { class: App\Entity\Users, property: username }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            #http_basic: ~
            provider: projet
            anonymous: true
            form_login:
                login_path: security_login
                check_path: security_login
                csrf_token_generator: security.csrf.token_manager
            logout:
                path:       security_logout
                target:     home
            
            # Checkbox "Se souvenir de moi" du formulaire login
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 semaine en secondes
                path:     /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
    encoders:
        App\Entity\Users: 
            algorithm: bcrypt  
            cost: 12
    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    
    access_control:
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/registration, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/blog, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/suscriber, roles: ROLE_ADMIN }
        - { path: ^/users/, allow_if: "is_granted('ROLE_SUPER_ADMIN')"}
    
        
        
